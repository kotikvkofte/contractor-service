services:
  backend:
    image: contractor-service
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5433/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: ${RABBIT_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBIT_USERNAME}
      SPRING_RABBITMQ_PASSWORD: ${RABBIT_PASSWORD}
    ports:
      - "8080:8080"

  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.13.7-management
    hostname: rabbitmq
    restart: always
    ports:
      - 5672:5672 # AMQP
      - 15672:15672 # web-интерфейс

volumes:
  db-data: